// Unified API Mocking
// Copyright (c) 2011 Open Wide and others
// 
// MIT licensed
// 
// Contact : easysoa-dev@googlegroups.com
//
// Documentation
// Author: Marwane Kalam-Alami, Marc Dutoo

--------------
Object kinds
--------------

Service
		Business or technical service need, independently from its implementation.
     A single service can provide several Operations.
Service Implementation
		Implementation of a Service. Several implementations of the same need can exist,
		for instance a light (scripted) implementation, a full implementation and a mock one.
Service Endpoint
		Service Impl. launched and made available through the web.
Operation
        An atomic functionality provided by a Service. Made available by a Service Endpoint
        through a specific URL or specific arguments to the request.
Application Implementation
        Collection of related Services that use the same technology.

Server
        Piece of software able to host Service Impls and make them available through Service Endpoints.
Environment
		Collection of Servers used together in a certain context (development, staging...)

Proxy
        All services hosted by EasySOA can be run behind a proxy to allow to use Proxy Features on them.
Proxy Feature
        Piece of logic which can be used on services proxies or Tunneling Nodes, to enable
        various things when requests are triggered (monitoring, fuses, service changes detection...)
Tunneling Node
        Endpoint designed specifically to serve as an intermediate between two Services, Service Impls
        or Service Endpoints (depending on when they are created). At runtime, they tunnel calls from
        one endpoint to an other, and allow to apply Proxy Features on them.

Scaffolder Client
		Specific type of Service Impl. generated by EasySOA Light as a client to call
		existing Service Endpoints.
Scaffolder Client UI
		Part of a scaffolder client that displays a form for users to call a service endpoint.
		Should be customizable (by editing the template for example).
		

--------------
Ressources hierarchy
--------------
/envDev/scaffolderClient/references/calledService
