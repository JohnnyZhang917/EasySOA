
/*
 * 
 */

package com.microsofttranslator.api.v1.soap;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.2.1
 * Mon Jun 27 12:18:25 CEST 2011
 * Generated source version: 2.2.1
 * 
 */


@WebServiceClient(name = "SoapService", 
                  wsdlLocation = "http://api.microsofttranslator.com/V1/Soap.svc?WSDL",
                  targetNamespace = "http://api.microsofttranslator.com/v1/soap.svc") 
public class SoapService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://api.microsofttranslator.com/v1/soap.svc", "SoapService");
    public final static QName BasicHttpBindingLanguageService = new QName("http://api.microsofttranslator.com/v1/soap.svc", "BasicHttpBinding_LanguageService");
    static {
        URL url = null;
        try {
            url = new URL("http://api.microsofttranslator.com/V1/Soap.svc?WSDL");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from http://api.microsofttranslator.com/V1/Soap.svc?WSDL");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public SoapService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SoapService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SoapService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns LanguageService
     */
    @WebEndpoint(name = "BasicHttpBinding_LanguageService")
    public LanguageService getBasicHttpBindingLanguageService() {
        return super.getPort(BasicHttpBindingLanguageService, LanguageService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LanguageService
     */
    @WebEndpoint(name = "BasicHttpBinding_LanguageService")
    public LanguageService getBasicHttpBindingLanguageService(WebServiceFeature... features) {
        return super.getPort(BasicHttpBindingLanguageService, LanguageService.class, features);
    }

}
