<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.easysoa.samples.smarttravel</groupId>
    <artifactId>easysoa-samples-smarttravel-services-backup</artifactId>
    <name>EasySOA Sample Smart Travel Services Backup (using CXF)</name>
    <packaging>jar</packaging>
    
	<parent>
		<groupId>org.easysoa.samples</groupId>
		<artifactId>easysoa-samples-parent</artifactId>
		<version>0.4-SNAPSHOT</version>
		<relativePath>../../easysoa-samples-parent/pom.xml</relativePath>
	</parent>

	<dependencies>
		<!--<dependency> <groupId>fr.inria.galaxy.j1</groupId> <artifactId>meteo-model</artifactId> 
			<version>1.0-SNAPSHOT</version> </dependency> -->

		<!-- Include in the war the FraSCAti Servlet CXF. -->
		<!-- dependency> <groupId>org.ow2.frascati</groupId> <artifactId>frascati-servlet-cxf</artifactId> 
			<version>1.4</version> </dependency -->

		<!-- Include in the war the FraSCAti Runtime Factory. -->
		<dependency>
			<groupId>org.ow2.frascati</groupId>
			<artifactId>frascati-assembly-factory</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>org.ow2.frascati</groupId>
			<artifactId>frascati-binding-factory</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>org.ow2.frascati</groupId>
			<artifactId>frascati-binding-ws</artifactId>
			<version>1.4</version>
		</dependency>

		<!-- to run this example with mvn -Prun -->
		<!--<dependency> <groupId>org.ow2.frascati.factory </groupId> <artifactId>frascati-factory-tools 
			</artifactId> <version>1.4</version> </dependency> <dependency> <groupId>org.ow2.frascati.mojo</groupId> 
			<artifactId>frascati-launcher-plugin</artifactId> <version>1.4</version> 
			<type>maven-plugin</type> </dependency> -->

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.woodstox</groupId>
			<artifactId>stax2-api</artifactId>
			<version>3.1.1</version>
		</dependency>
	    <!-- Mockito -->
  		<dependency>
  			<groupId>org.mockito</groupId>
  			<artifactId>mockito-all</artifactId>
  			<version>1.9.0-rc1</version>
  			<scope>test</scope>
  		</dependency>		
	</dependencies>

	<!-- ======= -->
	<!-- Build -->
	<!-- ======= -->

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<!-- The configuration of maven-assembly-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2.1</version><!--$NO-MVN-MAN-VER$ -->
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
				<!-- The configuration of the plugin -->
				<configuration>
					<!-- Specifies the configuration file of the assembly plugin -->
					<descriptors>
						<descriptor>src/main/assembly/assembly.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>
			<!-- The configuration of maven-jar-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.1</version>
				<!-- The configuration of the plugin -->
				<configuration>
					<!-- Configuration of the archiver -->
					<archive>
						<!-- Manifest specific configuration -->
						<manifest>
							<!-- Classpath is added to the manifest of the created jar file. -->
							<addClasspath>true</addClasspath>
							<!-- Configures the classpath prefix. This configuration option is 
								used to specify that all needed libraries are found under lib/ directory. -->
							<classpathPrefix>../lib/</classpathPrefix>
							<!-- Specifies the main class of the application -->
							<mainClass>net.server.Server</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
