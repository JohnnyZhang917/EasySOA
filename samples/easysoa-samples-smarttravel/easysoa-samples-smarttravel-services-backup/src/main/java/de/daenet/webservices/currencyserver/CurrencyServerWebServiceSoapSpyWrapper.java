/**
 * EasySOA Samples - Smart Travel
 * Copyright 2011 Open Wide
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * Contact : easysoa-dev@googlegroups.com
 */


/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package de.daenet.webservices.currencyserver;

import java.util.logging.Logger;
import net.server.Delegated;
import de.daenet.webservices.currencyserver.GetDataSetResponse.GetDataSetResult;
import static org.mockito.Mockito.spy;

/**
 * This class was generated by Apache CXF 2.3.3
 * 2011-07-20T14:27:53.443+02:00
 * Generated source version: 2.3.3
 * 
 */

@javax.jws.WebService(
                      serviceName = "CurrencyServerWebService",
                      portName = "CurrencyServerWebServiceSoap",
                      targetNamespace = "http://www.daenet.de/webservices/CurrencyServer",
                      //wsdlLocation = "http://www.currencyserver.de/webservice/currencyserverwebservice.asmx?wsdl",
                      endpointInterface = "de.daenet.webservices.currencyserver.CurrencyServerWebServiceSoap")

public class CurrencyServerWebServiceSoapSpyWrapper implements CurrencyServerWebServiceSoap, Delegated<CurrencyServerWebServiceSoap> {

    private static final Logger LOG = Logger.getLogger(CurrencyServerWebServiceSoapSpyWrapper.class.getName());
    
    private CurrencyServerWebServiceSoap impl;
    private CurrencyServerWebServiceSoap spyDelegate;

	public CurrencyServerWebServiceSoapSpyWrapper() {
    	this.impl = new CurrencyServerWebServiceSoapImpl1();
    	this.spyDelegate = spy(this.impl);
    }
	
	public CurrencyServerWebServiceSoap getDelegate() {
		return this.spyDelegate;
	}

    public double getDollarValue(String provider, String currency) {
		return spyDelegate.getDollarValue(provider, currency);
	}

	public String getProviderTimestamp(String providerId, String provider) {
		return spyDelegate.getProviderTimestamp(providerId, provider);
	}

	public String getProviderList() {
		return spyDelegate.getProviderList();
	}

	public GetDataSetResult getDataSet(String provider) {
		return spyDelegate.getDataSet(provider);
	}

	public String getXmlStream(String provider) {
		return spyDelegate.getXmlStream(provider);
	}

	public double getCurrencyValue(String provider, String srcCurrency, String dstCurrency) {
		return spyDelegate.getCurrencyValue(provider, srcCurrency, dstCurrency);
	}

	public String getProviderDescription(String provider) {
		return spyDelegate.getProviderDescription(provider);
	}

}
