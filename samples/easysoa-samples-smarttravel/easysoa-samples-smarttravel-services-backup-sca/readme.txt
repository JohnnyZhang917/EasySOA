
This project includes 3 mocks used by the smart travel sample. It work with FraSCAti.

This project DO NOT WORK with already existing smart travel clients ! 

Indeed, FraSCAti ignore JAXWS annotations so the FraSCAti generated web services are not compatibles with existing clients (there are some differences between the generated WSDl and the original WSDL). 

An other version of this project can be found in the "easysoa-samples-smarttravel-services-backup". This project works with CXF and generate web services compatibles with existing clients. 
You can found more informations in the readme.txt project file. 
 
-------

This project regroups three mocks :
- The weather mock : http://www.webservicex.net/globalweather.asmx?wsdl
- The currency mock : http://www.currencyserver.de/webservice/currencyserverwebservice.asmx?WSDL
- The translate mock : http://api.microsofttranslator.com/V1/Soap.svc?WSDL

The endpoint for each mock is specified in the services-backup-sca.composite file, the default value is used : http://localhost:9020/

Services are published to these specifics endpoints (if base address is http://localhost:9020/): 

- Meteo backup : http://localhost:9020/WeatherService
- Currency backup : http://localhost:9020/CurrencyService
- Translate backup : http://localhost:9020/TranslateService

To get the WSDL's, just add '?wsdl' to the above addresses.

-----

Remark : In this case, it is not possible to run the mock with FraSCAti because FraSCAti doesn't works with the JAXWS annotations.
So when you have to work with CXF generated classes from a WSDL, you have at least this problem :
- The port name generated by FraSCAti don't match with the one from the wsdl because FraSCAti add the suffix 'Port'.
