/**
 * EasySOA Samples - Smart Travel
 * Copyright 2011 Open Wide
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * Contact : easysoa-dev@groups.google.com
 */


package com.microsofttranslator.api.v1.soap_svc;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;

/**
 * This class was generated by Apache CXF 2.3.3
 * 2011-07-22T18:52:21.897+02:00
 * Generated source version: 2.3.3
 * 
 */
public final class LanguageService_BasicHttpBindingLanguageService_Client {

    private static final QName SERVICE_NAME = new QName("http://api.microsofttranslator.com/v1/soap.svc", "SoapService");

    private LanguageService_BasicHttpBindingLanguageService_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = SoapService.WSDL_LOCATION;
        if (args.length > 0) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        SoapService ss = new SoapService(wsdlURL, SERVICE_NAME);
        LanguageService port = ss.getBasicHttpBindingLanguageService();  
        
        {
        System.out.println("Invoking detect...");
        java.lang.String _detect_appId = "";
        java.lang.String _detect_text = "";
        java.lang.String _detect__return = port.detect(_detect_appId, _detect_text);
        System.out.println("detect.result=" + _detect__return);


        }
        {
        System.out.println("Invoking translate...");
        java.lang.String _translate_appId = "";
        java.lang.String _translate_text = "";
        java.lang.String _translate_from = "";
        java.lang.String _translate_to = "";
        java.lang.String _translate__return = port.translate(_translate_appId, _translate_text, _translate_from, _translate_to);
        System.out.println("translate.result=" + _translate__return);


        }
        {
        System.out.println("Invoking getLanguageNames...");
        java.lang.String _getLanguageNames_appId = "";
        java.lang.String _getLanguageNames_locale = "";
        com.microsofttranslator.api.v1.soap.ArrayOfstring _getLanguageNames__return = port.getLanguageNames(_getLanguageNames_appId, _getLanguageNames_locale);
        System.out.println("getLanguageNames.result=" + _getLanguageNames__return);


        }
        {
        System.out.println("Invoking getLanguages...");
        java.lang.String _getLanguages_appId = "";
        com.microsofttranslator.api.v1.soap.ArrayOfstring _getLanguages__return = port.getLanguages(_getLanguages_appId);
        System.out.println("getLanguages.result=" + _getLanguages__return);


        }

        System.exit(0);
    }

}
