
/*
 * 
 */
package org.easysoa.proxy.core.event.generated;


import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import org.easysoa.samples.paf.PureAirFlowersService;

/**
 * This class was generated by Apache CXF 2.4.0
 * 2012-04-16T11:36:29.461+02:00
 * Generated source version: 2.4.0
 * 
 */


@WebServiceClient(name = "PureAirFlowersServiceService", 
                  wsdlLocation = "http://localhost:9010/PureAirFlowers?wsdl",
                  targetNamespace = "http://paf.samples.easysoa.org/") 
public class PureAirFlowersServiceService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://paf.samples.easysoa.org/", "PureAirFlowersServiceService");
    public final static QName PureAirFlowersServicePort = new QName("http://paf.samples.easysoa.org/", "PureAirFlowersServicePort");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:9010/PureAirFlowers?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(PureAirFlowersServiceService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://localhost:9010/PureAirFlowers?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public PureAirFlowersServiceService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public PureAirFlowersServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PureAirFlowersServiceService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     * 
     * @return
     *     returns PureAirFlowersService
     */
    @WebEndpoint(name = "PureAirFlowersServicePort")
    public PureAirFlowersService getPureAirFlowersServicePort() {
        return super.getPort(PureAirFlowersServicePort, PureAirFlowersService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PureAirFlowersService
     */
    @WebEndpoint(name = "PureAirFlowersServicePort")
    public PureAirFlowersService getPureAirFlowersServicePort(WebServiceFeature... features) {
        return super.getPort(PureAirFlowersServicePort, PureAirFlowersService.class, features);
    }

}
