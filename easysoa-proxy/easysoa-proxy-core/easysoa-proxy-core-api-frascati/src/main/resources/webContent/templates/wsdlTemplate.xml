#macro ( execute_custom $arg0 $arg1 $arg2 $arg3)
<definitions name="${arg1}Service"
   targetNamespace="http://www.easysoa.org/wsdl/${arg1}.wsdl"
   xmlns="http://schemas.xmlsoap.org/wsdl/"
   xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
   xmlns:tns="http://www.easysoa.org/wsdl/${arg1}.wsdl"
   xmlns:xsd="http://easysoa.org/${arg1}.xsd">

   ## Call the macro to render WSDL types
   #renderWSDLTypes(${arg1} ${arg2.get("operationList")} ${arg3})
 
   ## Call the macro to render WSDL messages   
   #foreach( $operation in ${arg2.get("operationList")} )
       #renderWSDLMessages($operation)
   #end

   ## Call the macro to render WSDL port types
   #renderWSDLPortTypes(${arg1} ${arg2.get("operationList")})

   <binding name="${arg1}_Binding" type="tns:${arg1}_PortType">
   <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
   #foreach( $operation in ${arg2.get("operationList")} )
   		#renderWSDLOperations($operation)
   #end
   </binding>

   <service name="${arg1}_Service">
      <documentation>WSDL File for ${arg1} Service</documentation>
      <port binding="tns:${arg1}_Binding" name="${arg1}_Port">
         <soap:address location="http://localhost:18000/target/${arg1}"/>
      </port>
   </service>
</definitions>
#end

## Macro to render WSDL message part
#macro ( renderWSDLMessages $operation $paramFields )
   <message name="${operation}Input">
       <!--<part name="body" type="${operation}Request"/>-->
	   <part name="body" element="xsd:${operation}Request"/>
   </message>
   <message name="${operation}Output">
      <!--<part name="body" type="${operation}Response"/>-->
      <part name="body" element="xsd:${operation}Response"/>
   </message>
#end

## Macro to render WSDL types part
#macro (renderWSDLTypes $storeName $operationList $paramFields )
  <types>
    <schema targetNamespace="http://easysoa.org/${storeName}.xsd" xmlns="http://www.w3.org/2001/XMLSchema">
      #foreach( $operation in $operationList )
      <element name="${operation}Request">
        <complexType>
          <all>
      		#foreach( $paramField in $paramFields.get($operation).get("inputParams") )    
            <element name="$paramField.getFieldName()" type="$paramField.getFieldType()" default="$paramField.getDefaultValue()"/>
            #end
          </all>
        </complexType>
      </element>
      <element name="${operation}Response">
         <complexType>
           <all>
   	       #foreach( $paramField in $paramFields.get($operation).get("outputParams") )
           <element name="$paramField.getFieldName()" type="$paramField.getFieldType()"/>
           #end
           </all>
         </complexType>
      </element>
      #end
    </schema>
  </types>
#end

## Macro to render WSDL port types part
#macro ( renderWSDLPortTypes $storeName $operationList)
   <portType name="${storeName}_PortType">
   #foreach( $operation in $operationList )
   		#renderWSDLPortTypeOperation($operation)
   #end	
   </portType>
#end

## Macro to render WSDL port type operation part
#macro ( renderWSDLPortTypeOperation $operation )
	<operation name="$operation">
    	<input message="tns:${operation}Input"/>
        <output message="tns:${operation}Output"/>
	</operation>
#end

## Macro to render WSDL operations part
#macro ( renderWSDLOperations $operation )
   <operation name="$operation">
      <soap:operation soapAction="$operation"/>
      <input>
         <!--<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:examples:helloservice" use="encoded"/>-->
         <soap:body use="literal"/>
      </input>
      <output>
         <!--<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:examples:helloservice" use="encoded"/>-->
         <soap:body use="literal"/>
      </output>
   </operation>
   
#end